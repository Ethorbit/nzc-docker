server {
    include     snippets/server.conf;
    listen      80 default_server;
    listen      [::]:80 default_server;
    listen      443 http2 ssl default_server;
    listen      [::]:443 http2 ssl default_server; 
    
    include             snippets/ssl.conf;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers         "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve      secp384r1;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling        on;
    ssl_stapling_verify on;
    resolver            8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout    5s;
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header          Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header          X-Frame-Options DENY;
    add_header          X-Content-Type-Options nosniff;
    
    root /usr/share/nginx/html;

    location / {
        allow all;
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
        #add_header X-Frame-Options SAMEORIGIN;
        #add_header X-XSS-Protection "1; mode=block";
        autoindex on;
        
        # add these to the fastdl location once it's added
        gzip on;
        gzip_disable "msie6";
    }   

    # We need a location /fastdl soon
    
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /";
    }

    location = /.well-known/acme-challenge/ {
        return 404;
    }
    
    location ~ /\.ht {
        deny  all;
    }
    
    location ~* \.(as|cfg|sh|exe|rc|lst|scr|php)$ {
        deny all;
    }

    location /searx {
        access_log /dev/null;
        error_log /dev/null;
        
        allow 127.0.0.0/8;
        allow 172.0.0.0/8;
        allow 192.0.0.0/8;
        include snippets/private/allowed_ips.conf;
        deny all;

        proxy_pass "http://searxng:8080";
        proxy_set_header   Host             $http_host;
        proxy_set_header   Connection       $http_connection;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Scheme         $scheme;
        proxy_set_header   X-Script-Name    /searx;
    }
}
