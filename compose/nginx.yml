version: "3.9"
x-labels: &labels
  labels:
    - "io.portainer.accesscontrol.teams=websites"
  
x-nginx: &nginx
  #container_name: ${CONTAINER_NAME_PREFIX}-nginx-${CONTAINER_NAME_SUFFIX}
  build:
    context: ./build/nginx
    args:
      UID: ${nginx_u}
      GID: ${nginx_g}
  user: "${nginx_u}:${nginx_g}"
  group_add:
    - ${php_g}
    - ${gmod_g}
    - ${svencoop_g}
    - ${websites_g}
  networks:
    nginx:
      ipv4_address: 172.10.1.2
    searxng:
    portainer:
  ports:
    - ${NGINX_HTTP_PORT:-80}:80
    - ${NGINX_HTTPS_PORT:-443}:443
  extra_hosts:
    - "searxng:172.50.10.1"
    - "portainer:172.60.10.1"
    - "phpmyadmin:172.70.10.1"
  healthcheck:
    test: "curl -f http://${PRIVATE_DOMAIN_NAME} || exit 1"
    start_period: 5s
    interval: 10s
    timeout: 10s
    retries: 3
  environment:
    - PUBLIC_DOMAIN_NAME=${PUBLIC_DOMAIN_NAME}
    - PRIVATE_DOMAIN_NAME=${PRIVATE_DOMAIN_NAME}
  cpuset: ${NGINX_CPU}
  cpu_shares: 2048
  deploy:
    resources:
      limits:
        memory: 1024M
      reservations:
        memory: 512M
  blkio_config:
    weight: 800
    device_write_bps:
      - path: ${DISK}
        rate: 50000000
    device_read_bps:
      - path: ${DISK}
        rate: 50000000
    device_read_iops:
      - path: ${DISK}
        rate: 100
    device_write_iops:
      - path: ${DISK}
        rate: 100
  <<: [*labels]
  restart: always
x-nginx_envsubst_conf: &nginx_envsubst_conf
  build:
    context: ./build/input_output_envsubst
    args:
      FILE_EXTENSION: "conf"
  volumes:
    - ./data/configs/nginx/conf.d.template:/mnt/input
    - ./data/configs/nginx/conf.d:/mnt/output
  network_mode: none
  cap_drop:
    - ALL
  cap_add:
    - CAP_DAC_OVERRIDE
    - CAP_FOWNER
  <<: [*labels]
  restart: on-failure
x-nginx_envsubst_snippets: &nginx_envsubst_snippets
  build:
    context: ./build/input_output_envsubst
    args:
      FILE_EXTENSION: "conf"
  volumes:
    - ./data/configs/nginx/snippets.template:/mnt/input
    - ./data/configs/nginx/snippets:/mnt/output
  network_mode: none
  cap_drop:
    - ALL
  cap_add:
    - CAP_DAC_OVERRIDE
    - CAP_FOWNER
  <<: [*labels]
  restart: on-failure
x-nginx_envsubst_production: &nginx_envsubst_production
  profiles:
    - production
  environment:  
    - PUBLIC_DOMAIN_NAME=${PUBLIC_DOMAIN_NAME}
    - PRIVATE_DOMAIN_NAME=${PRIVATE_DOMAIN_NAME}
    - WEBSITES_ROOT="/mnt/websites"
    - FASTDL_ROOT="/mnt/fastdl"
    - PHPMYADMIN_ROOT="/mnt/admin/phpmyadmin"
    - NGINX_SSL_CERT="/etc/letsencrypt/live/chronicles.local/cert.pem"
    - NGINX_SSL_CERT_KEY="/etc/letsencrypt/live/chronicles.local/privkey.pem"
    - NGINX_SSL_DHPARAM="/etc/letsencrypt/ssl-dhparams.pem"
    - NGINX_PORTAINER_CACHE_PATH=/mnt/cache/portainer
    - NGINX_PHPMYADMIN_CACHE_PATH=/mnt/cache/phpmyadmin
    - NGINX_SEARCH_CACHE_PATH=/mnt/cache/search
  <<: [*labels]
  restart: on-failure
x-nginx_envsubst_development: &nginx_envsubst_development
  profiles:
    - development
  environment:
    - PUBLIC_DOMAIN_NAME=${PUBLIC_DOMAIN_NAME}
    - PRIVATE_DOMAIN_NAME=${PRIVATE_DOMAIN_NAME}
    - WEBSITES_ROOT="/mnt/websites"
    - FASTDL_ROOT="/mnt/fastdl"
    - PHPMYADMIN_ROOT="/mnt/admin/phpmyadmin"
    - NGINX_SSL_CERT="/etc/mkcert/mkcert.pem"
    - NGINX_SSL_CERT_KEY="/etc/mkcert/mkcert.key"
    - NGINX_SSL_DHPARAM="/etc/mkcert/mkcert.dh"
    - NGINX_PORTAINER_CACHE_PATH=/mnt/cache/portainer
    - NGINX_PHPMYADMIN_CACHE_PATH=/mnt/cache/phpmyadmin
    - NGINX_SEARCH_CACHE_PATH=/mnt/cache/search
  restart: on-failure
services:
  nginx_dnsmasq:
    image: ethorbit/dnsmasq:latest
    volumes:
      - ./data/configs/nginx/dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf
    ports:
      - 53/udp
    networks:
      nginx:
        ipv4_address: 172.10.1.1
    depends_on:
      nginx_envsubst_dnsmasq:
        condition: service_completed_successfully
    <<: [*labels]
    restart: on-failure
  nginx_envsubst_dnsmasq:
    image: ethorbit/envsubst:latest
    volumes:
      - ./data/configs/nginx/dnsmasq:/mnt
    command: >
      /bin/sh -c "envsubst `printf '$${%s}\n' PRIVATE_DOMAIN_NAME` 
      < /mnt/dnsmasq.conf.template > /mnt/dnsmasq.conf"
    environment:
      - PRIVATE_DOMAIN_NAME=${PRIVATE_DOMAIN_NAME}
    network_mode: none
    cap_drop:
      - ALL
    <<: [*labels]
    restart: on-failure
  
  nginx_links:
    image: alpine:3.17.2
    volumes:
      - nginx_fastdl:/mnt/fastdl
    command: >
      /bin/sh -c "mkdir -p /mnt/links/svencoop/svencoop
      && rm -f /mnt/fastdl/svencoop
      && ln -sf /mnt/links/svencoop/svencoop /mnt/fastdl/svencoop"
    cap_drop:
      - ALL 
    cap_add:
      - CAP_DAC_OVERRIDE
    network_mode: none
    <<: [*labels]
    restart: on-failure
  nginx_permissions:
    image: alpine:3.17.2
    build:
      context: ./build/permissions
    volumes: 
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./data/configs/users/passwd:/etc/passwd:ro
      - ./data/configs/users/group:/etc/group:ro
      - ./data/configs/users/shadow:/etc/shadow:ro
      - ./data/configs/users/gshadow:/etc/gshadow:ro
      - nginx_cache:/mnt/nginx_cache
      - nginx_websites:/mnt/nginx_websites
      - nginx_fastdl:/mnt/nginx_fastdl
      - ./data/configs/nginx/cpu:/mnt/nginx_cpu
      - ./data/configs/nginx:/mnt/nginx_conf
      - mkcert:/mnt/mkcert
      - certbot_conf:/mnt/certbot_conf
      - certbot_www:/mnt/certbot_www
    command: >
      /bin/sh -c "echo \"${NGINX_CPU}\" > /mnt/nginx_cpu/online
      && chown ${nginx_u}:${websites_g} /mnt/nginx_websites
      && chown ${nginx_u}:${fastdl_g} /mnt/nginx_fastdl
      && chmod 2771 /mnt/nginx_websites 
      /mnt/nginx_fastdl
      && mkdir -p /mnt/nginx_cache/portainer
      && mkdir -p /mnt/nginx_cache/phpmyadmin
      && mkdir -p /mnt/nginx_cache/search
      && mkdir -p /mnt/admin/portainer
      && chmod 700 -R /mnt/nginx_cache/
      && chown -R ${nginx_u}:${nginx_g} /mnt/nginx_cache/
      && mkdir -p /mnt/nginx_fastdl/gmod
      && chown ${nginx_u}:${gmod_g} /mnt/nginx_fastdl/gmod
      && chmod 2771 /mnt/nginx_fastdl/gmod
      && chown -R root:${admin_g} /mnt/nginx_conf/
      && chmod -R 775 /mnt/nginx_conf/
      && chown -fR ${nginx_u}:root /mnt/mkcert/
      && if [ -f '/mnt/certbot_conf/ssl-dhparams.pem' ]; then
        chown -f nginx:${admin_g} /mnt/certbot_conf/ssl-dhparams.pem
      fi
      && if [ -d '/mnt/certbot_conf/live/' ]; then
        chown -fR nginx:${admin_g} /mnt/certbot_conf/live/
      fi
      && setfacl -d -m u::rwx,g::rwx,o::- /mnt/nginx_websites
      && setfacl -d -m u::rwx,g::rwx,o::- /mnt/nginx_fastdl"
    cap_drop:
      - ALL 
    cap_add:
      - CAP_DAC_OVERRIDE
      - CAP_CHOWN
      - CAP_FOWNER
      - CAP_FSETID
    network_mode: none
    depends_on: 
      nginx_links:
        condition: service_completed_successfully
      certbot:
        condition: service_started
      mkcert:
        condition: service_completed_successfully
      openssl:
        condition: service_completed_successfully
    <<: [*labels]
  #restart: on-failure
  # Production nginx, for use only on a machine the real domain is pointing to.
  certbot:
    image: certbot/certbot:v2.3.0
    profiles:
      - production
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    networks:
      - nginx
    <<: [*labels]
    restart: unless-stopped       
  nginx_envsubst_conf_production:
    <<: [*nginx_envsubst_conf, *nginx_envsubst_production]
  nginx_envsubst_snippets_production:
    <<: [*nginx_envsubst_snippets, *nginx_envsubst_production]
  nginx_production: 
    <<: [ *nginx ]
    profiles:
      - production
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./data/configs/users/passwd:/etc/passwd:ro
      - ./data/configs/users/group:/etc/group:ro
      - ./data/configs/users/shadow:/etc/shadow:ro 
      - ./data/configs/users/gshadow:/etc/gshadow:ro
      - ./data/configs/nginx/cpu/online:/sys/devices/system/cpu/online:ro
      - php_fpm_run:/var/run/php-fpm
      - nginx_cache:/mnt/cache
      - nginx_websites:/mnt/websites
      - nginx_fastdl:/mnt/fastdl
      - phpmyadmin:/mnt/admin/phpmyadmin
      - svencoop:/mnt/links/svencoop:ro
      - ./data/configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/configs/nginx/snippets:/etc/nginx/snippets:ro
      - ./data/configs/nginx/conf.d:/etc/nginx/conf.d:ro
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    depends_on:
      nginx_envsubst_conf_production:
        condition: service_completed_successfully 
      nginx_envsubst_snippets_production:
        condition: service_completed_successfully
      nginx_permissions:
        condition: service_completed_successfully
      nginx_dnsmasq:
        condition: service_started
      php_fpm_production:
        condition: service_started
  # Development nginx (because Let's Encrypt only works on the actual domain)
  mkcert:
    image: ethorbit/mkcert:latest
    profiles:
      - development
    volumes:
      - ${CA_TRUST_STORE_DIR:-/usr/local/share/ca-certificates}:/usr/local/share/ca-certificates
      - mkcert:/mnt
    command: > 
      /bin/sh -c "[[ ! -s /mnt/mkcert.pem || ! -s /mnt/mkcert.key ]]
      && mkcert -install
      && mkcert -cert-file /mnt/mkcert.pem -key-file /mnt/mkcert.key
      ${PRIVATE_DOMAIN_NAME} *.${PRIVATE_DOMAIN_NAME} 
      || exit 0" 
    network_mode: none 
    restart: on-failure
  openssl:
    image: ethorbit/openssl:latest
    profiles:
      - development
    volumes:
      - mkcert:/mnt
    command: >
      /bin/sh -c "[[ ! -s /mnt/mkcert.dh ]]
      && openssl dhparam -out /mnt/mkcert.dh 2048
      || exit 0"
    restart: on-failure
  nginx_envsubst_conf_development:
    #<<: *nginx_envsubst_conf
    #<<: *nginx_envsubst_development
    <<: [ *nginx_envsubst_conf, *nginx_envsubst_development ]
  nginx_envsubst_snippets_development:
    #<<: *nginx_envsubst_snippets
    #<<: *nginx_envsubst_development
    <<: [ *nginx_envsubst_snippets, *nginx_envsubst_development ]
  nginx_development:
    <<: [ *nginx ]
    profiles:
      - development
    volumes:    
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./data/configs/users/passwd:/etc/passwd:ro
      - ./data/configs/users/group:/etc/group:ro
      - ./data/configs/users/shadow:/etc/shadow:ro 
      - ./data/configs/users/gshadow:/etc/gshadow:ro
      - ./data/configs/nginx/cpu/online:/sys/devices/system/cpu/online:ro
      - php_fpm_run:/var/run/php-fpm
      - nginx_cache:/mnt/cache
      - nginx_websites:/mnt/websites
      - nginx_fastdl:/mnt/fastdl
      - phpmyadmin:/mnt/admin/phpmyadmin
      - svencoop:/mnt/links/svencoop:ro
      - ./data/configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/configs/nginx/snippets:/etc/nginx/snippets:ro
      - ./data/configs/nginx/conf.d:/etc/nginx/conf.d:ro
      - mkcert:/etc/mkcert
    dns:
      - 172.10.1.1
    depends_on:
      nginx_envsubst_conf_development:
        condition: service_completed_successfully 
      nginx_envsubst_snippets_development:
        condition: service_completed_successfully
      nginx_permissions:
        condition: service_completed_successfully
      nginx_dnsmasq:
        condition: service_started
      php_fpm_development:
        condition: service_started
volumes:
  nginx_cache:
  nginx_websites:
  nginx_fastdl:
  phpmyadmin:
  certbot_conf:
  certbot_www:
  mkcert:
  svencoop:
networks:
  nginx:
    ipam:
      driver: default
      config:
        - subnet: 172.10.0.0/23
  searxng:
    ipam:
      driver: default 
      config:
        - subnet: 172.50.10.0/22
  portainer:
    ipam:
      driver: default 
      config:
        - subnet: 172.60.10.0/22
  phpmyadmin:
    ipam:
      driver: default 
      config:
        - subnet: 172.70.10.0/22
